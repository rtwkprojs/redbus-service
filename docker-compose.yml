version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: redbus-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: redbus
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - redbus-network

  # User Service
  user-service:
    build: ./user-service
    container_name: redbus-user-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: redbus
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - redbus-network

  # Agency Service
  agency-service:
    build: ./agency-service
    container_name: redbus-agency-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: redbus
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - redbus-network

  # Journey Service
  journey-service:
    build: ./journey-service
    container_name: redbus-journey-service
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: redbus
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - redbus-network

  # Booking Service
  booking-service:
    build: ./booking-service
    container_name: redbus-booking-service
    ports:
      - "8084:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: redbus
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      JOURNEY_SERVICE_URL: http://journey-service:8083
      PAYMENT_SERVICE_URL: http://payment-service:8086
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - redbus-network

  # Payment Service
  payment-service:
    build: ./payment-service
    container_name: redbus-payment-service
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: redbus
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - redbus-network

volumes:
  postgres_data:

networks:
  redbus-network:
    driver: bridge
